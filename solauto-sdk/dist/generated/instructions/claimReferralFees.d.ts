/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type ClaimReferralFeesInstructionAccounts = {
    signer: Signer;
    signerWsolTa?: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
    ataProgram?: PublicKey | Pda;
    rent?: PublicKey | Pda;
    referralState: PublicKey | Pda;
    referralFeesDestTa: PublicKey | Pda;
    referralFeesDestMint: PublicKey | Pda;
    referralAuthority?: PublicKey | Pda;
    feesDestinationTa?: PublicKey | Pda;
};
export type ClaimReferralFeesInstructionData = {
    discriminator: number;
};
export type ClaimReferralFeesInstructionDataArgs = {};
export declare function getClaimReferralFeesInstructionDataSerializer(): Serializer<ClaimReferralFeesInstructionDataArgs, ClaimReferralFeesInstructionData>;
export declare function claimReferralFees(context: Pick<Context, 'programs'>, input: ClaimReferralFeesInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=claimReferralFees.d.ts.map