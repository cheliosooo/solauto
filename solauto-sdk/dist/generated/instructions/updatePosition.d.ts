/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { UpdatePositionData, UpdatePositionDataArgs } from '../types';
export type UpdatePositionInstructionAccounts = {
    signer: Signer;
    systemProgram?: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
    solautoPosition: PublicKey | Pda;
    dcaMint?: PublicKey | Pda;
    positionDcaTa?: PublicKey | Pda;
    signerDcaTa?: PublicKey | Pda;
};
export type UpdatePositionInstructionData = {
    discriminator: number;
    updatePositionData: UpdatePositionData;
};
export type UpdatePositionInstructionDataArgs = {
    updatePositionData: UpdatePositionDataArgs;
};
export declare function getUpdatePositionInstructionDataSerializer(): Serializer<UpdatePositionInstructionDataArgs, UpdatePositionInstructionData>;
export type UpdatePositionInstructionArgs = UpdatePositionInstructionDataArgs;
export declare function updatePosition(context: Pick<Context, 'programs'>, input: UpdatePositionInstructionAccounts & UpdatePositionInstructionArgs): TransactionBuilder;
//# sourceMappingURL=updatePosition.d.ts.map