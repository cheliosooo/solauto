/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { RoutePlanStep, RoutePlanStepArgs } from '../types';
export type ExactOutRouteInstructionAccounts = {
    tokenProgram?: PublicKey | Pda;
    userTransferAuthority: Signer;
    userSourceTokenAccount: PublicKey | Pda;
    userDestinationTokenAccount: PublicKey | Pda;
    destinationTokenAccount?: PublicKey | Pda;
    sourceMint: PublicKey | Pda;
    destinationMint: PublicKey | Pda;
    platformFeeAccount?: PublicKey | Pda;
    token2022Program?: PublicKey | Pda;
    eventAuthority: PublicKey | Pda;
    program: PublicKey | Pda;
};
export type ExactOutRouteInstructionData = {
    discriminator: Array<number>;
    routePlan: Array<RoutePlanStep>;
    outAmount: bigint;
    quotedInAmount: bigint;
    slippageBps: number;
    platformFeeBps: number;
};
export type ExactOutRouteInstructionDataArgs = {
    routePlan: Array<RoutePlanStepArgs>;
    outAmount: number | bigint;
    quotedInAmount: number | bigint;
    slippageBps: number;
    platformFeeBps: number;
};
export declare function getExactOutRouteInstructionDataSerializer(): Serializer<ExactOutRouteInstructionDataArgs, ExactOutRouteInstructionData>;
export type ExactOutRouteInstructionArgs = ExactOutRouteInstructionDataArgs;
export declare function exactOutRoute(context: Pick<Context, 'programs'>, input: ExactOutRouteInstructionAccounts & ExactOutRouteInstructionArgs): TransactionBuilder;
//# sourceMappingURL=exactOutRoute.d.ts.map