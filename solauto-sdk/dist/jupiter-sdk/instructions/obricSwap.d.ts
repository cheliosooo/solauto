/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type ObricSwapInstructionAccounts = {
    swapProgram: PublicKey | Pda;
    tradingPair: PublicKey | Pda;
    mintX: PublicKey | Pda;
    mintY: PublicKey | Pda;
    reserveX: PublicKey | Pda;
    reserveY: PublicKey | Pda;
    userTokenAccountX: PublicKey | Pda;
    userTokenAccountY: PublicKey | Pda;
    protocolFee: PublicKey | Pda;
    xPriceFeed: PublicKey | Pda;
    yPriceFeed: PublicKey | Pda;
    user: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
};
export type ObricSwapInstructionData = {
    discriminator: Array<number>;
};
export type ObricSwapInstructionDataArgs = {};
export declare function getObricSwapInstructionDataSerializer(): Serializer<ObricSwapInstructionDataArgs, ObricSwapInstructionData>;
export declare function obricSwap(context: Pick<Context, 'programs'>, input: ObricSwapInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=obricSwap.d.ts.map