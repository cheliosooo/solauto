/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type CreateProgramOpenOrdersInstructionAccounts = {
    openOrders: PublicKey | Pda;
    payer?: Signer;
    programAuthority: PublicKey | Pda;
    dexProgram: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
    rent?: PublicKey | Pda;
    market: PublicKey | Pda;
};
export type CreateProgramOpenOrdersInstructionData = {
    discriminator: Array<number>;
    id: number;
};
export type CreateProgramOpenOrdersInstructionDataArgs = {
    id: number;
};
export declare function getCreateProgramOpenOrdersInstructionDataSerializer(): Serializer<CreateProgramOpenOrdersInstructionDataArgs, CreateProgramOpenOrdersInstructionData>;
export type CreateProgramOpenOrdersInstructionArgs = CreateProgramOpenOrdersInstructionDataArgs;
export declare function createProgramOpenOrders(context: Pick<Context, 'payer' | 'programs'>, input: CreateProgramOpenOrdersInstructionAccounts & CreateProgramOpenOrdersInstructionArgs): TransactionBuilder;
//# sourceMappingURL=createProgramOpenOrders.d.ts.map