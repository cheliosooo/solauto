/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type StepSwapInstructionAccounts = {
    tokenSwapProgram: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
    swap: PublicKey | Pda;
    authority?: PublicKey | Pda;
    userTransferAuthority: PublicKey | Pda;
    source: PublicKey | Pda;
    swapSource: PublicKey | Pda;
    swapDestination: PublicKey | Pda;
    destination: PublicKey | Pda;
    poolMint: PublicKey | Pda;
    poolFee: PublicKey | Pda;
};
export type StepSwapInstructionData = {
    discriminator: Array<number>;
};
export type StepSwapInstructionDataArgs = {};
export declare function getStepSwapInstructionDataSerializer(): Serializer<StepSwapInstructionDataArgs, StepSwapInstructionData>;
export declare function stepSwap(context: Pick<Context, 'identity' | 'programs'>, input: StepSwapInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=stepSwap.d.ts.map