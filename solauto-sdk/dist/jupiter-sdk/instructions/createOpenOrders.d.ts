/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type CreateOpenOrdersInstructionAccounts = {
    openOrders: PublicKey | Pda;
    payer?: Signer;
    dexProgram: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
    rent?: PublicKey | Pda;
    market: PublicKey | Pda;
};
export type CreateOpenOrdersInstructionData = {
    discriminator: Array<number>;
};
export type CreateOpenOrdersInstructionDataArgs = {};
export declare function getCreateOpenOrdersInstructionDataSerializer(): Serializer<CreateOpenOrdersInstructionDataArgs, CreateOpenOrdersInstructionData>;
export declare function createOpenOrders(context: Pick<Context, 'payer' | 'programs'>, input: CreateOpenOrdersInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=createOpenOrders.d.ts.map