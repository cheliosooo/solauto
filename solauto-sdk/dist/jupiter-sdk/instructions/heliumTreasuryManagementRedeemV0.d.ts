/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type HeliumTreasuryManagementRedeemV0InstructionAccounts = {
    swapProgram: PublicKey | Pda;
    treasuryManagement: PublicKey | Pda;
    treasuryMint: PublicKey | Pda;
    supplyMint: PublicKey | Pda;
    treasury: PublicKey | Pda;
    circuitBreaker: PublicKey | Pda;
    from: PublicKey | Pda;
    to: PublicKey | Pda;
    owner: PublicKey | Pda;
    circuitBreakerProgram: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
};
export type HeliumTreasuryManagementRedeemV0InstructionData = {
    discriminator: Array<number>;
};
export type HeliumTreasuryManagementRedeemV0InstructionDataArgs = {};
export declare function getHeliumTreasuryManagementRedeemV0InstructionDataSerializer(): Serializer<HeliumTreasuryManagementRedeemV0InstructionDataArgs, HeliumTreasuryManagementRedeemV0InstructionData>;
export declare function heliumTreasuryManagementRedeemV0(context: Pick<Context, 'programs'>, input: HeliumTreasuryManagementRedeemV0InstructionAccounts): TransactionBuilder;
//# sourceMappingURL=heliumTreasuryManagementRedeemV0.d.ts.map