/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type GoosefxV2SwapInstructionAccounts = {
    swapProgram: PublicKey | Pda;
    pair: PublicKey | Pda;
    poolRegistry: PublicKey | Pda;
    userWallet: PublicKey | Pda;
    sslPoolInSigner: PublicKey | Pda;
    sslPoolOutSigner: PublicKey | Pda;
    userAtaIn: PublicKey | Pda;
    userAtaOut: PublicKey | Pda;
    sslOutMainVault: PublicKey | Pda;
    sslOutSecondaryVault: PublicKey | Pda;
    sslInMainVault: PublicKey | Pda;
    sslInSecondaryVault: PublicKey | Pda;
    sslOutFeeVault: PublicKey | Pda;
    feeDestination: PublicKey | Pda;
    outputTokenPriceHistory: PublicKey | Pda;
    outputTokenOracle: PublicKey | Pda;
    inputTokenPriceHistory: PublicKey | Pda;
    inputTokenOracle: PublicKey | Pda;
    eventEmitter: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
};
export type GoosefxV2SwapInstructionData = {
    discriminator: Array<number>;
};
export type GoosefxV2SwapInstructionDataArgs = {};
export declare function getGoosefxV2SwapInstructionDataSerializer(): Serializer<GoosefxV2SwapInstructionDataArgs, GoosefxV2SwapInstructionData>;
export declare function goosefxV2Swap(context: Pick<Context, 'programs'>, input: GoosefxV2SwapInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=goosefxV2Swap.d.ts.map