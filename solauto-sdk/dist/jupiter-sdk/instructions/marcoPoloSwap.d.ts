/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type MarcoPoloSwapInstructionAccounts = {
    swapProgram: PublicKey | Pda;
    state: PublicKey | Pda;
    pool: PublicKey | Pda;
    tokenX: PublicKey | Pda;
    tokenY: PublicKey | Pda;
    poolXAccount: PublicKey | Pda;
    poolYAccount: PublicKey | Pda;
    swapperXAccount: PublicKey | Pda;
    swapperYAccount: PublicKey | Pda;
    swapper: PublicKey | Pda;
    referrerXAccount: PublicKey | Pda;
    referrerYAccount: PublicKey | Pda;
    referrer: PublicKey | Pda;
    programAuthority: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
    associatedTokenProgram: PublicKey | Pda;
    rent?: PublicKey | Pda;
};
export type MarcoPoloSwapInstructionData = {
    discriminator: Array<number>;
};
export type MarcoPoloSwapInstructionDataArgs = {};
export declare function getMarcoPoloSwapInstructionDataSerializer(): Serializer<MarcoPoloSwapInstructionDataArgs, MarcoPoloSwapInstructionData>;
export declare function marcoPoloSwap(context: Pick<Context, 'programs'>, input: MarcoPoloSwapInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=marcoPoloSwap.d.ts.map