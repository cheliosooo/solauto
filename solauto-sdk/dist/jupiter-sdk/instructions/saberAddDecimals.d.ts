/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type SaberAddDecimalsInstructionAccounts = {
    addDecimalsProgram: PublicKey | Pda;
    wrapper: PublicKey | Pda;
    wrapperMint: PublicKey | Pda;
    wrapperUnderlyingTokens: PublicKey | Pda;
    owner: PublicKey | Pda;
    userUnderlyingTokens: PublicKey | Pda;
    userWrappedTokens: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
};
export type SaberAddDecimalsInstructionData = {
    discriminator: Array<number>;
};
export type SaberAddDecimalsInstructionDataArgs = {};
export declare function getSaberAddDecimalsInstructionDataSerializer(): Serializer<SaberAddDecimalsInstructionDataArgs, SaberAddDecimalsInstructionData>;
export declare function saberAddDecimals(context: Pick<Context, 'programs'>, input: SaberAddDecimalsInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=saberAddDecimals.d.ts.map