/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type StabbleStableSwapInstructionAccounts = {
    swapProgram: PublicKey | Pda;
    user: PublicKey | Pda;
    userTokenIn: PublicKey | Pda;
    userTokenOut: PublicKey | Pda;
    vaultTokenIn: PublicKey | Pda;
    vaultTokenOut: PublicKey | Pda;
    beneficiaryTokenOut: PublicKey | Pda;
    pool: PublicKey | Pda;
    withdrawAuthority: PublicKey | Pda;
    vault: PublicKey | Pda;
    vaultAuthority: PublicKey | Pda;
    vaultProgram: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
};
export type StabbleStableSwapInstructionData = {
    discriminator: Array<number>;
};
export type StabbleStableSwapInstructionDataArgs = {};
export declare function getStabbleStableSwapInstructionDataSerializer(): Serializer<StabbleStableSwapInstructionDataArgs, StabbleStableSwapInstructionData>;
export declare function stabbleStableSwap(context: Pick<Context, 'programs'>, input: StabbleStableSwapInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=stabbleStableSwap.d.ts.map