/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type PerpsV2RemoveLiquidityInstructionAccounts = {
    swapProgram: PublicKey | Pda;
    owner: PublicKey | Pda;
    fundingOrReceivingAccount: PublicKey | Pda;
    lpTokenAccount: PublicKey | Pda;
    transferAuthority: PublicKey | Pda;
    perpetuals: PublicKey | Pda;
    pool: PublicKey | Pda;
    custody: PublicKey | Pda;
    custodyDovesPriceAccount: PublicKey | Pda;
    custodyPythnetPriceAccount: PublicKey | Pda;
    custodyTokenAccount: PublicKey | Pda;
    lpTokenMint: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
    eventAuthority: PublicKey | Pda;
    program: PublicKey | Pda;
};
export type PerpsV2RemoveLiquidityInstructionData = {
    discriminator: Array<number>;
};
export type PerpsV2RemoveLiquidityInstructionDataArgs = {};
export declare function getPerpsV2RemoveLiquidityInstructionDataSerializer(): Serializer<PerpsV2RemoveLiquidityInstructionDataArgs, PerpsV2RemoveLiquidityInstructionData>;
export declare function perpsV2RemoveLiquidity(context: Pick<Context, 'programs'>, input: PerpsV2RemoveLiquidityInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=perpsV2RemoveLiquidity.d.ts.map