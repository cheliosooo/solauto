/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type ClaimInstructionAccounts = {
    wallet: PublicKey | Pda;
    programAuthority: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
};
export type ClaimInstructionData = {
    discriminator: Array<number>;
    id: number;
};
export type ClaimInstructionDataArgs = {
    id: number;
};
export declare function getClaimInstructionDataSerializer(): Serializer<ClaimInstructionDataArgs, ClaimInstructionData>;
export type ClaimInstructionArgs = ClaimInstructionDataArgs;
export declare function claim(context: Pick<Context, 'programs'>, input: ClaimInstructionAccounts & ClaimInstructionArgs): TransactionBuilder;
//# sourceMappingURL=claim.d.ts.map