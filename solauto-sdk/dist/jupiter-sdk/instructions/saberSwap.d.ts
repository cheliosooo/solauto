/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type SaberSwapInstructionAccounts = {
    swapProgram: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
    swap: PublicKey | Pda;
    swapAuthority: PublicKey | Pda;
    userAuthority: PublicKey | Pda;
    inputUserAccount: PublicKey | Pda;
    inputTokenAccount: PublicKey | Pda;
    outputUserAccount: PublicKey | Pda;
    outputTokenAccount: PublicKey | Pda;
    feesTokenAccount: PublicKey | Pda;
};
export type SaberSwapInstructionData = {
    discriminator: Array<number>;
};
export type SaberSwapInstructionDataArgs = {};
export declare function getSaberSwapInstructionDataSerializer(): Serializer<SaberSwapInstructionDataArgs, SaberSwapInstructionData>;
export declare function saberSwap(context: Pick<Context, 'programs'>, input: SaberSwapInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=saberSwap.d.ts.map