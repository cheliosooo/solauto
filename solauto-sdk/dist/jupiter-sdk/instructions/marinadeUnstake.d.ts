/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type MarinadeUnstakeInstructionAccounts = {
    marinadeFinanceProgram: PublicKey | Pda;
    state: PublicKey | Pda;
    msolMint: PublicKey | Pda;
    liqPoolSolLegPda: PublicKey | Pda;
    liqPoolMsolLeg: PublicKey | Pda;
    treasuryMsolAccount: PublicKey | Pda;
    getMsolFrom: PublicKey | Pda;
    getMsolFromAuthority: PublicKey | Pda;
    transferSolTo: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
    userWsolTokenAccount: PublicKey | Pda;
};
export type MarinadeUnstakeInstructionData = {
    discriminator: Array<number>;
};
export type MarinadeUnstakeInstructionDataArgs = {};
export declare function getMarinadeUnstakeInstructionDataSerializer(): Serializer<MarinadeUnstakeInstructionDataArgs, MarinadeUnstakeInstructionData>;
export declare function marinadeUnstake(context: Pick<Context, 'programs'>, input: MarinadeUnstakeInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=marinadeUnstake.d.ts.map