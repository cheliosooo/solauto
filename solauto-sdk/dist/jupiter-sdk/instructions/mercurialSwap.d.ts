/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type MercurialSwapInstructionAccounts = {
    swapProgram: PublicKey | Pda;
    swapState: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
    poolAuthority: PublicKey | Pda;
    userTransferAuthority: PublicKey | Pda;
    sourceTokenAccount: PublicKey | Pda;
    destinationTokenAccount: PublicKey | Pda;
};
export type MercurialSwapInstructionData = {
    discriminator: Array<number>;
};
export type MercurialSwapInstructionDataArgs = {};
export declare function getMercurialSwapInstructionDataSerializer(): Serializer<MercurialSwapInstructionDataArgs, MercurialSwapInstructionData>;
export declare function mercurialSwap(context: Pick<Context, 'programs'>, input: MercurialSwapInstructionAccounts): TransactionBuilder;
//# sourceMappingURL=mercurialSwap.d.ts.map