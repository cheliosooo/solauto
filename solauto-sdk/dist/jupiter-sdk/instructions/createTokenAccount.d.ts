/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type CreateTokenAccountInstructionAccounts = {
    tokenAccount: PublicKey | Pda;
    user: Signer;
    mint: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
};
export type CreateTokenAccountInstructionData = {
    discriminator: Array<number>;
    bump: number;
};
export type CreateTokenAccountInstructionDataArgs = {
    bump: number;
};
export declare function getCreateTokenAccountInstructionDataSerializer(): Serializer<CreateTokenAccountInstructionDataArgs, CreateTokenAccountInstructionData>;
export type CreateTokenAccountInstructionArgs = CreateTokenAccountInstructionDataArgs;
export declare function createTokenAccount(context: Pick<Context, 'programs'>, input: CreateTokenAccountInstructionAccounts & CreateTokenAccountInstructionArgs): TransactionBuilder;
//# sourceMappingURL=createTokenAccount.d.ts.map