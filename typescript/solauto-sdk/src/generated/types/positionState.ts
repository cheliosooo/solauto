/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Serializer,
  struct,
  u16,
  u64,
} from '@metaplex-foundation/umi/serializers';
import {
  PositionTokenUsage,
  PositionTokenUsageArgs,
  getPositionTokenUsageSerializer,
} from '.';

export type PositionState = {
  liqUtilizationRateBps: number;
  netWorthBaseAmountUsd: bigint;
  netWorthBaseAmountSupplyMint: bigint;
  supply: PositionTokenUsage;
  debt: PositionTokenUsage;
  maxLtvBps: number;
  liqThresholdBps: number;
  lastUpdated: bigint;
};

export type PositionStateArgs = {
  liqUtilizationRateBps: number;
  netWorthBaseAmountUsd: number | bigint;
  netWorthBaseAmountSupplyMint: number | bigint;
  supply: PositionTokenUsageArgs;
  debt: PositionTokenUsageArgs;
  maxLtvBps: number;
  liqThresholdBps: number;
  lastUpdated: number | bigint;
};

export function getPositionStateSerializer(): Serializer<
  PositionStateArgs,
  PositionState
> {
  return struct<PositionState>(
    [
      ['liqUtilizationRateBps', u16()],
      ['netWorthBaseAmountUsd', u64()],
      ['netWorthBaseAmountSupplyMint', u64()],
      ['supply', getPositionTokenUsageSerializer()],
      ['debt', getPositionTokenUsageSerializer()],
      ['maxLtvBps', u16()],
      ['liqThresholdBps', u16()],
      ['lastUpdated', u64()],
    ],
    { description: 'PositionState' }
  ) as Serializer<PositionStateArgs, PositionState>;
}
