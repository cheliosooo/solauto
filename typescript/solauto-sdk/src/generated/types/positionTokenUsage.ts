/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable, PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  publicKey as publicKeySerializer,
  struct,
  u16,
  u64,
  u8,
} from '@metaplex-foundation/umi/serializers';
import { TokenAmount, TokenAmountArgs, getTokenAmountSerializer } from '.';

export type PositionTokenUsage = {
  mint: PublicKey;
  decimals: number;
  amountUsed: TokenAmount;
  amountCanBeUsed: TokenAmount;
  baseAmountMarketPriceUsd: bigint;
  flashLoanFeeBps: number;
  borrowFeeBps: Option<number>;
};

export type PositionTokenUsageArgs = {
  mint: PublicKey;
  decimals: number;
  amountUsed: TokenAmountArgs;
  amountCanBeUsed: TokenAmountArgs;
  baseAmountMarketPriceUsd: number | bigint;
  flashLoanFeeBps: number;
  borrowFeeBps: OptionOrNullable<number>;
};

export function getPositionTokenUsageSerializer(): Serializer<
  PositionTokenUsageArgs,
  PositionTokenUsage
> {
  return struct<PositionTokenUsage>(
    [
      ['mint', publicKeySerializer()],
      ['decimals', u8()],
      ['amountUsed', getTokenAmountSerializer()],
      ['amountCanBeUsed', getTokenAmountSerializer()],
      ['baseAmountMarketPriceUsd', u64()],
      ['flashLoanFeeBps', u16()],
      ['borrowFeeBps', option(u16())],
    ],
    { description: 'PositionTokenUsage' }
  ) as Serializer<PositionTokenUsageArgs, PositionTokenUsage>;
}
