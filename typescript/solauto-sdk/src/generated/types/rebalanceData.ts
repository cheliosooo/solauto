/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  struct,
  u16,
} from '@metaplex-foundation/umi/serializers';

export type RebalanceData = {
  targetLiqUtilizationRateBps: Option<number>;
  maxPriceSlippageBps: Option<number>;
  limitGapBps: Option<number>;
};

export type RebalanceDataArgs = {
  targetLiqUtilizationRateBps: OptionOrNullable<number>;
  maxPriceSlippageBps: OptionOrNullable<number>;
  limitGapBps: OptionOrNullable<number>;
};

export function getRebalanceDataSerializer(): Serializer<
  RebalanceDataArgs,
  RebalanceData
> {
  return struct<RebalanceData>(
    [
      ['targetLiqUtilizationRateBps', option(u16())],
      ['maxPriceSlippageBps', option(u16())],
      ['limitGapBps', option(u16())],
    ],
    { description: 'RebalanceData' }
  ) as Serializer<RebalanceDataArgs, RebalanceData>;
}
