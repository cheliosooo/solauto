/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  struct,
  u16,
  u64,
  u8,
} from '@metaplex-foundation/umi/serializers';
import { DCADirection, DCADirectionArgs, getDCADirectionSerializer } from '.';

export type DCASettings = {
  unixStartDate: bigint;
  unixDcaInterval: bigint;
  dcaPeriodsPassed: number;
  targetDcaPeriods: number;
  dcaDirection: DCADirection;
  dcaRiskAversionBps: Option<number>;
};

export type DCASettingsArgs = {
  unixStartDate: number | bigint;
  unixDcaInterval: number | bigint;
  dcaPeriodsPassed: number;
  targetDcaPeriods: number;
  dcaDirection: DCADirectionArgs;
  dcaRiskAversionBps: OptionOrNullable<number>;
};

export function getDCASettingsSerializer(): Serializer<
  DCASettingsArgs,
  DCASettings
> {
  return struct<DCASettings>(
    [
      ['unixStartDate', u64()],
      ['unixDcaInterval', u64()],
      ['dcaPeriodsPassed', u8()],
      ['targetDcaPeriods', u8()],
      ['dcaDirection', getDCADirectionSerializer()],
      ['dcaRiskAversionBps', option(u16())],
    ],
    { description: 'DCASettings' }
  ) as Serializer<DCASettingsArgs, DCASettings>;
}
