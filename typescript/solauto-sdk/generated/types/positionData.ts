/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  struct,
  u8,
} from '@metaplex-foundation/umi/serializers';
import {
  KaminoPositionData,
  KaminoPositionDataArgs,
  MarginfiPositionData,
  MarginfiPositionDataArgs,
  SolautoSettingsParameters,
  SolautoSettingsParametersArgs,
  SolendPositionData,
  SolendPositionDataArgs,
  getKaminoPositionDataSerializer,
  getMarginfiPositionDataSerializer,
  getSolautoSettingsParametersSerializer,
  getSolendPositionDataSerializer,
} from '.';

export type PositionData = {
  positionId: number;
  settingParams: SolautoSettingsParameters;
  marginfiData: Option<MarginfiPositionData>;
  solendData: Option<SolendPositionData>;
  kaminoData: Option<KaminoPositionData>;
};

export type PositionDataArgs = {
  positionId: number;
  settingParams: SolautoSettingsParametersArgs;
  marginfiData: OptionOrNullable<MarginfiPositionDataArgs>;
  solendData: OptionOrNullable<SolendPositionDataArgs>;
  kaminoData: OptionOrNullable<KaminoPositionDataArgs>;
};

export function getPositionDataSerializer(): Serializer<
  PositionDataArgs,
  PositionData
> {
  return struct<PositionData>(
    [
      ['positionId', u8()],
      ['settingParams', getSolautoSettingsParametersSerializer()],
      ['marginfiData', option(getMarginfiPositionDataSerializer())],
      ['solendData', option(getSolendPositionDataSerializer())],
      ['kaminoData', option(getKaminoPositionDataSerializer())],
    ],
    { description: 'PositionData' }
  ) as Serializer<PositionDataArgs, PositionData>;
}
