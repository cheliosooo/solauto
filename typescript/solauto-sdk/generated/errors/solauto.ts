/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Program, ProgramError } from '@metaplex-foundation/umi';

type ProgramErrorConstructor = new (
  program: Program,
  cause?: Error
) => ProgramError;
const codeToErrorMap: Map<number, ProgramErrorConstructor> = new Map();
const nameToErrorMap: Map<string, ProgramErrorConstructor> = new Map();

/** InvalidPositionSettings: Invalid position data given */
export class InvalidPositionSettingsError extends ProgramError {
  override readonly name: string = 'InvalidPositionSettings';

  readonly code: number = 0x0; // 0

  constructor(program: Program, cause?: Error) {
    super('Invalid position data given', program, cause);
  }
}
codeToErrorMap.set(0x0, InvalidPositionSettingsError);
nameToErrorMap.set('InvalidPositionSettings', InvalidPositionSettingsError);

/** FailedAccountDeserialization: Failed to deserialize account data, incorrect account was likely given */
export class FailedAccountDeserializationError extends ProgramError {
  override readonly name: string = 'FailedAccountDeserialization';

  readonly code: number = 0x1; // 1

  constructor(program: Program, cause?: Error) {
    super(
      'Failed to deserialize account data, incorrect account was likely given',
      program,
      cause
    );
  }
}
codeToErrorMap.set(0x1, FailedAccountDeserializationError);
nameToErrorMap.set(
  'FailedAccountDeserialization',
  FailedAccountDeserializationError
);

/** StaleProtocolData: Stale protocol data. Refresh instruction must be invoked before taking a protocol action */
export class StaleProtocolDataError extends ProgramError {
  override readonly name: string = 'StaleProtocolData';

  readonly code: number = 0x2; // 2

  constructor(program: Program, cause?: Error) {
    super(
      'Stale protocol data. Refresh instruction must be invoked before taking a protocol action',
      program,
      cause
    );
  }
}
codeToErrorMap.set(0x2, StaleProtocolDataError);
nameToErrorMap.set('StaleProtocolData', StaleProtocolDataError);

/** IncorrectFeeReceiver: Incorrect fee receiver account provided */
export class IncorrectFeeReceiverError extends ProgramError {
  override readonly name: string = 'IncorrectFeeReceiver';

  readonly code: number = 0x3; // 3

  constructor(program: Program, cause?: Error) {
    super('Incorrect fee receiver account provided', program, cause);
  }
}
codeToErrorMap.set(0x3, IncorrectFeeReceiverError);
nameToErrorMap.set('IncorrectFeeReceiver', IncorrectFeeReceiverError);

/** MissingRequiredAccounts: Missing required accounts for the given instruction */
export class MissingRequiredAccountsError extends ProgramError {
  override readonly name: string = 'MissingRequiredAccounts';

  readonly code: number = 0x4; // 4

  constructor(program: Program, cause?: Error) {
    super(
      'Missing required accounts for the given instruction',
      program,
      cause
    );
  }
}
codeToErrorMap.set(0x4, MissingRequiredAccountsError);
nameToErrorMap.set('MissingRequiredAccounts', MissingRequiredAccountsError);

/**
 * Attempts to resolve a custom program error from the provided error code.
 * @category Errors
 */
export function getSolautoErrorFromCode(
  code: number,
  program: Program,
  cause?: Error
): ProgramError | null {
  const constructor = codeToErrorMap.get(code);
  return constructor ? new constructor(program, cause) : null;
}

/**
 * Attempts to resolve a custom program error from the provided error name, i.e. 'Unauthorized'.
 * @category Errors
 */
export function getSolautoErrorFromName(
  name: string,
  program: Program,
  cause?: Error
): ProgramError | null {
  const constructor = nameToErrorMap.get(name);
  return constructor ? new constructor(program, cause) : null;
}
