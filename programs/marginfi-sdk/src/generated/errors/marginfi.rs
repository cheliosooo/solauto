//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! [https://github.com/metaplex-foundation/kinobi]
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum MarginfiError {
    /// 6000 (0x1770) - Math error
    #[error("Math error")]
    MathError,
    /// 6001 (0x1771) - Invalid bank index
    #[error("Invalid bank index")]
    BankNotFound,
    /// 6002 (0x1772) - Lending account balance not found
    #[error("Lending account balance not found")]
    LendingAccountBalanceNotFound,
    /// 6003 (0x1773) - Bank deposit capacity exceeded
    #[error("Bank deposit capacity exceeded")]
    BankAssetCapacityExceeded,
    /// 6004 (0x1774) - Invalid transfer
    #[error("Invalid transfer")]
    InvalidTransfer,
    /// 6005 (0x1775) - Missing Pyth or Bank account
    #[error("Missing Pyth or Bank account")]
    MissingPythOrBankAccount,
    /// 6006 (0x1776) - Missing Pyth account
    #[error("Missing Pyth account")]
    MissingPythAccount,
    /// 6007 (0x1777) - Invalid Pyth account
    #[error("Invalid Pyth account")]
    InvalidOracleAccount,
    /// 6008 (0x1778) - Missing Bank account
    #[error("Missing Bank account")]
    MissingBankAccount,
    /// 6009 (0x1779) - Invalid Bank account
    #[error("Invalid Bank account")]
    InvalidBankAccount,
    /// 6010 (0x177A) - Bad account health
    #[error("Bad account health")]
    BadAccountHealth,
    /// 6011 (0x177B) - Lending account balance slots are full
    #[error("Lending account balance slots are full")]
    LendingAccountBalanceSlotsFull,
    /// 6012 (0x177C) - Bank already exists
    #[error("Bank already exists")]
    BankAlreadyExists,
    /// 6013 (0x177D) - Illegal liquidation
    #[error("Illegal liquidation")]
    IllegalLiquidation,
    /// 6014 (0x177E) - Account is not bankrupt
    #[error("Account is not bankrupt")]
    AccountNotBankrupt,
    /// 6015 (0x177F) - Account balance is not bad debt
    #[error("Account balance is not bad debt")]
    BalanceNotBadDebt,
    /// 6016 (0x1780) - Invalid group config
    #[error("Invalid group config")]
    InvalidConfig,
    /// 6017 (0x1781) - Stale oracle data
    #[error("Stale oracle data")]
    StaleOracle,
    /// 6018 (0x1782) - Bank paused
    #[error("Bank paused")]
    BankPaused,
    /// 6019 (0x1783) - Bank is ReduceOnly mode
    #[error("Bank is ReduceOnly mode")]
    BankReduceOnly,
    /// 6020 (0x1784) - Bank is missing
    #[error("Bank is missing")]
    BankAccoutNotFound,
    /// 6021 (0x1785) - Operation is deposit-only
    #[error("Operation is deposit-only")]
    OperationDepositOnly,
    /// 6022 (0x1786) - Operation is withdraw-only
    #[error("Operation is withdraw-only")]
    OperationWithdrawOnly,
    /// 6023 (0x1787) - Operation is borrow-only
    #[error("Operation is borrow-only")]
    OperationBorrowOnly,
    /// 6024 (0x1788) - Operation is repay-only
    #[error("Operation is repay-only")]
    OperationRepayOnly,
    /// 6025 (0x1789) - No asset found
    #[error("No asset found")]
    NoAssetFound,
    /// 6026 (0x178A) - No liability found
    #[error("No liability found")]
    NoLiabilityFound,
    /// 6027 (0x178B) - Invalid oracle setup
    #[error("Invalid oracle setup")]
    InvalidOracleSetup,
    /// 6028 (0x178C) - Invalid bank utilization ratio
    #[error("Invalid bank utilization ratio")]
    IllegalUtilizationRatio,
    /// 6029 (0x178D) - Bank borrow cap exceeded
    #[error("Bank borrow cap exceeded")]
    BankLiabilityCapacityExceeded,
    /// 6030 (0x178E) - Invalid Price
    #[error("Invalid Price")]
    InvalidPrice,
    /// 6031 (0x178F) - Account can have only one liablity when account is under isolated risk
    #[error("Account can have only one liablity when account is under isolated risk")]
    IsolatedAccountIllegalState,
    /// 6032 (0x1790) - Emissions already setup
    #[error("Emissions already setup")]
    EmissionsAlreadySetup,
    /// 6033 (0x1791) - Oracle is not set
    #[error("Oracle is not set")]
    OracleNotSetup,
    /// 6034 (0x1792) - Invalid swithcboard decimal conversion
    #[error("Invalid swithcboard decimal conversion")]
    InvalidSwitchboardDecimalConversion,
    /// 6035 (0x1793) - Cannot close balance because of outstanding emissions
    #[error("Cannot close balance because of outstanding emissions")]
    CannotCloseOutstandingEmissions,
    /// 6036 (0x1794) - Update emissions error
    #[error("Update emissions error")]
    EmissionsUpdateError,
    /// 6037 (0x1795) - Account disabled
    #[error("Account disabled")]
    AccountDisabled,
    /// 6038 (0x1796) - Account can't temporarily open 3 balances, please close a balance first
    #[error("Account can't temporarily open 3 balances, please close a balance first")]
    AccountTempActiveBalanceLimitExceeded,
    /// 6039 (0x1797) - Illegal action during flashloan
    #[error("Illegal action during flashloan")]
    AccountInFlashloan,
    /// 6040 (0x1798) - Illegal flashloan
    #[error("Illegal flashloan")]
    IllegalFlashloan,
    /// 6041 (0x1799) - Illegal flag
    #[error("Illegal flag")]
    IllegalFlag,
    /// 6042 (0x179A) - Illegal balance state
    #[error("Illegal balance state")]
    IllegalBalanceState,
    /// 6043 (0x179B) - Illegal account authority transfer
    #[error("Illegal account authority transfer")]
    IllegalAccountAuthorityTransfer,
}

impl solana_program::program_error::PrintProgramError for MarginfiError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}
