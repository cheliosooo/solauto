//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! [https://github.com/metaplex-foundation/kinobi]
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum SolautoError {
    /// 0 (0x0) - Missing or incorrect accounts provided for the given instruction
    #[error("Missing or incorrect accounts provided for the given instruction")]
    IncorrectAccounts,
    /// 1 (0x1) - Failed to deserialize account data, incorrect account was likely given
    #[error("Failed to deserialize account data, incorrect account was likely given")]
    FailedAccountDeserialization,
    /// 2 (0x2) - Invalid position data given
    #[error("Invalid position data given")]
    InvalidPositionSettings,
    /// 3 (0x3) - Invalid DCA data given
    #[error("Invalid DCA data given")]
    InvalidDCASettings,
    /// 4 (0x4) - Stale protocol data. Refresh instruction must be invoked before taking a protocol action
    #[error(
        "Stale protocol data. Refresh instruction must be invoked before taking a protocol action"
    )]
    StaleProtocolData,
    /// 5 (0x5) - Unable to adjust position to the desired utilization rate
    #[error("Unable to adjust position to the desired utilization rate")]
    UnableToReposition,
    /// 6 (0x6) - Desired action brought the utilization rate to an unsafe amount
    #[error("Desired action brought the utilization rate to an unsafe amount")]
    ExceededValidUtilizationRate,
    /// 7 (0x7) - Invalid position condition to rebalance
    #[error("Invalid position condition to rebalance")]
    InvalidRebalanceCondition,
    /// 8 (0x8) - Unable to invoke instruciton through a CPI
    #[error("Unable to invoke instruciton through a CPI")]
    InstructionIsCPI,
    /// 9 (0x9) - Too many rebalance instruction invocations in the same transaction
    #[error("Too many rebalance instruction invocations in the same transaction")]
    RebalanceAbuse,
    /// 10 (0xA) - Incorrect set of instructions in the transaction
    #[error("Incorrect set of instructions in the transaction")]
    IncorrectInstructions,
}

impl solana_program::program_error::PrintProgramError for SolautoError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}
